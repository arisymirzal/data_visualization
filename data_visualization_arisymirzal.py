# -*- coding: utf-8 -*-
"""data_visualization_ArisyMirzal.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1AgQ3HDkhn-YKRmA33VQJ2zS-1nGpjdPL

## Tujuan Visualiasi

1. Exploratory :
- Mencari insight dari data.
- Tidak terlalu mementingkan estetik asal analis dapat mengerti.
- Menggunakan jenis visualisasi yang lebih advanced
- Berkenalan dengan data

2. Explanatory :
- Menyampaikan insight dari data
- Estetik diutamakan

## Univariate I

data hanya terdiri dari satu variabel (only x value)
1. Line Plots
2. Histograms
3. Box Plots
"""

import pandas as pd
import numpy as np
import seaborn as sns
import matplotlib.pyplot as plt

df = pd.read_csv("https://raw.githubusercontent.com/sushantag9/Supermarket-Sales-Data-Analysis/master/supermarket_sales%20-%20Sheet1.csv")
df.head()

df.info()

df["DateTime"] = pd.to_datetime(df["Date"] + " " + df["Time"])
df

df.info()

df.drop(columns=["Date","Time"],inplace=True)
df.info()

"""### Line Plot"""

df["hour"] = df["DateTime"].dt.hour #jam
df["weekday"] = df["DateTime"].dt.weekday # weekday
df["month"] = df["DateTime"].dt.month # bulan

df.head()

df["hour"] = df["DateTime"].dt.hour

df_plot = df.groupby("hour").agg({"Quantity":"sum"}).reset_index() # jumlah tiap jam

df["weekday"] = df["DateTime"].dt.weekday

df_plot = df.groupby("weekday").agg({"Quantity":"sum"}).reset_index() # jumlah tiap weekeday

df["month"] = df["DateTime"].dt.month

df_plot = df.groupby("month").agg({"Quantity":"sum"}).reset_index() # jumlah tiap bulan

df

df_plot

sns.lineplot(data=df_plot,x="hour",y="Quantity")
plt.title("Quantity in hour")
plt.show()

sns.lineplot(data=df_plot,x="weekday",y="Quantity")
plt.title("Quantity in weekday")
plt.show()

sns.lineplot(data=df_plot,x="month",y="Quantity")
plt.title("Quantity in month")
plt.show()

"""## Histograms"""

df.head()

df.info()

sns.histplot(df,x="Unit price")

sns.histplot(data=df, x='Unit price', bins=10)

sns.histplot(df,x="Tax 5%")

sns.histplot(df,x="Rating")

"""## Box Plots"""

sns.boxplot(data=df,y="Unit price")

sns.boxplot(data=df,y="Tax 5%")

sns.boxplot(data=df,y="gross income")

sns.boxplot(data=df,y="Rating")